name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_pharmacy_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: python manage.py migrate
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_HOST: localhost
        DB_NAME: test_pharmacy_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        REDIS_URL: redis://localhost:6379/0
        CELERY_BROKER_URL: redis://localhost:6379/0
        CELERY_RESULT_BACKEND: redis://localhost:6379/0

    - name: Run tests
      run: pytest
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_HOST: localhost
        DB_NAME: test_pharmacy_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        REDIS_URL: redis://localhost:6379/0
        CELERY_BROKER_URL: redis://localhost:6379/0
        CELERY_RESULT_BACKEND: redis://localhost:6379/0

    - name: Run linters
      run: |
        black --check .
        ruff check .

    - name: Run type checking
      run: mypy --strict .
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_HOST: "localhost"
        DB_NAME: "test_db"
        DB_USER: "test_user"
        DB_PASSWORD: "test_password"

    - name: Run security scanning
      run: bandit -r .